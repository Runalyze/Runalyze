{% extends 'tools/backup/base.html.twig' %}

{% block toolContent %}
    <div class="panel-content">
        <form action="{{ url('tools-backup') }}" method="post" id="database-backup" class="ajax no-automatic-reload">
            <input type="hidden" name="backup" value="true">

            <fieldset id="database-backup_legend_0">
                <legend onclick="Runalyze.toggleFieldset(this, 'database-backup_legend_0', false, '')">{% trans %}Export data{% endtrans %}</legend>
                <div class="w50">
                    <label for="export-type">{% trans %}File format{% endtrans %}</label>
                    <select name="export-type" id="export-type">
                        <option value="json">{% trans %}Portable backup{% endtrans %} (*.json.gz)</option>
                        <option value="sql">{% trans %}Database backup{% endtrans %} (*.sql.gz)</option>
                    </select>
                </div>

                <div class="w50">
                    <input type="submit" value="{% trans %}Create file{% endtrans %}">
                </div>

                <div class="fieldset-messages">
                    <p class="info">
                        <strong>{% trans %}JSON-format{% endtrans %} (*.json.gz)</strong><br>
                        <small>
                            {% trans %}
                                Portable backup of your configuration and data -
                                This file can be imported into any other installation, using this plugin.<br />
                                This way you can transfer your data from to local to an online installation and back.
                            {% endtrans %}
                        </small>
                    </p>
                    <p class="info">
                        <strong>{% trans %}SQL-format{% endtrans %} (*.sql.gz)</strong><br>
                        <small>
                            {% trans %}
                                Backup of the complete database -
                                This file can be imported manually with e.g. PHPMyAdmin into any database.<br />
                                This is recommended to create a backup copy or to import your data into a new installation.
                            {% endtrans %}
                        </small>
                    </p>
                </div>
            </fieldset>
        </form>
    </div>

    <div class="panel-content">
        <form action="{{ url('tools-backup') }}" method="post" id="backup-import">
            <fieldset id="backup-import_legend_0" class="">
                <legend onclick="Runalyze.toggleFieldset(this, 'backup-import_legend_0', false, '')">{% trans %}Import data{% endtrans %}</legend>
                <div class="fieldset-messages">
                    <div>
                        <div id="upload-container" style="margin-bottom:5px;">
                            <div class="c button" id="file-upload">{% trans %}Upload file{% endtrans %}</div>
                        </div>
                        <script>
                            $(function(){
                                new qq.FineUploaderBasic({
                                    button: $("#file-upload")[0],
                                    request: {
                                        endpoint: '{{ url('tools-backup-import') }}'
                                    },
                                    callbacks: {
                                        onError: function(id, name, errorReason, xhr) {
                                            $("#upload-container").append('<p class="error appended-by-uploader">'+errorReason+'</p>').removeClass("loading");
                                        },
                                        onSubmit: function(id, fileName) {
                                            $("#upload-container").addClass("loading");
                                        },
                                        onComplete: function(id, fileName, responseJSON) {
                                            $(".appended-by-uploader").remove();
                                            $("#pluginTool").loadDiv('my/tools/backup?file='+encodeURIComponent(fileName));

                                            if (!responseJSON.success) {
                                                if (responseJSON.error == "")
                                                    responseJSON.error = 'An unknown error occured.';
                                                $("#pluginTool").append('<p class="error appended-by-uploader">'+fileName+': '+responseJSON.error+'</p>');
                                                $("#upload-container").removeClass("loading");
                                            }
                                        }
                                    }
                                }); });
                        </script>

                        <p class="info">
                            {% trans %}Allowed file extension:{% endtrans %} *.json.gz
                        </p>
                        <p class="warning">
                            {% trans %}All shared links will be invalid if you (re-)import activities and overwrite all existing activities!{% endtrans %}
                        </p>
                        <p class="warning">
                            {% trans %}
                                The file has to be created with the same version of Runalyze!<br>
                                You won't be able to import a file from an older version.
                            {% endtrans %}
                        </p>
                        <p class="warning">
                            {% trans %}
                                The importer will not change existing data for equipment, sport types or activity types.<br>
                                You have to make these changes by hand or delete the existing data in advance.
                            {% endtrans %}
                        </p>
                    </div>
                </div>
            </fieldset>
        </form>
    </div>

    <div class="panel-content">
        <form action="{{ url('tools-backup') }}" method="post" id="backup-list">
            <fieldset id="backup-list_legend_0">
                <legend onclick="Runalyze.toggleFieldset(this, 'backup-list_legend_0', false, '')">{% trans %}Export data{% endtrans %}</legend>

                <div class="fieldset-messages">
                    {% for file in files %}
                        <p class="file">
                            <strong>{{ file.mTime|date('d.m.Y H:i') }}:</strong>
                            <a href="{{ url('tools-backup-download', {'filename': file.filename}) }}">{{ file.filename }}, {{ file.size|filesize }}</a>
                        </p>
                    {% else %}
                        <p class="file"><em>{% trans %}You did not export anything.{% endtrans %}</em></p>
                    {% endfor %}
                </div>
            </fieldset>
        </form>
    </div>
{% endblock %}
