{% extends "base_logged_in.twig" %}

{% import _self as this %}

{% macro tableCell(value, unit) %}
    {{ value|raw }} <small>{{ unit|raw }}</small>
{% endmacro %}

{% macro tableCellFor(value) %}
    {# @var value \Runalyze\Bundle\CoreBundle\Twig\DisplayableValue #}
    {{ value.value }} <small>{{ value.unit }}</small>
{% endmacro %}

{% macro tableRow(rowLabel, baseValue, pace, from, to) %}
    {% import _self as this %}

    <tr class="c">
        <td class="l"><strong>{{ rowLabel }}</strong></td>
        <td>{{ baseValue }}</td>
        <td>{{ this.tableCellFor(pace) }}</td>
        <td>{{ this.tableCellFor(distance(from)) }} - {{ this.tableCellFor(distance(to)) }}</td>
    </tr>
{% endmacro %}

{% block content %}
    <div class="panel-heading">
        <h1>{% trans %}Best sub segments{% endtrans %}</h1>
    </div>

    {# @var distanceSegments \Runalyze\Calculation\Math\SubSegmentMaximization #}
    {% set distanceSegments = statistics.distanceSegments %}
    {# @var timeSegments \Runalyze\Calculation\Math\SubSegmentMaximization #}
    {% set timeSegments = statistics.timeSegments %}

    <div class="panel-content">
        <table class="zebra-style more-padding" style="width: 400px;">
            <thead>
            <tr>
                <th colspan="2">{% trans %}Best segment{% endtrans %}</th>
                <th>{% trans %}Pace{% endtrans %}</th>
                <th>{% trans %}Position{% endtrans %}</th>
            </tr>
            </thead>
            <tbody class="top-and-bottom-border">
            {% for i, distance in statistics.distances %}
                {% if distanceSegments.hasMaximumForLengthIndex(i) %}
                    {% set fromTo = distanceSegments.indizesOfMaximumForLengthIndex(i) %}
                    {% set achievedTime = distanceSegments.maximumForLengthIndex(i) %}

                    {{ this.tableRow(
                        this.tableCellFor(distance(distance)),
                        achievedTime|duration,
                        pace(achievedTime / distance, paceUnit),
                        distanceArray[fromTo[0]],
                        distanceArray[fromTo[1]]
                    ) }}
                {% endif %}
            {% endfor %}
            </tbody>
            <tbody class="top-and-bottom-border">
            {% for i, time in statistics.times %}
                {% if timeSegments.hasMaximumForLengthIndex(i) %}
                    {% set fromTo = timeSegments.indizesOfMaximumForLengthIndex(i) %}
                    {% set achievedDistance = timeSegments.maximumForLengthIndex(i) %}

                    {{ this.tableRow(
                        time|date('H:i:s', false),
                        this.tableCellFor(distance(achievedDistance)),
                        pace(time / achievedDistance, paceUnit),
                        distanceArray[fromTo[0]],
                        distanceArray[fromTo[1]]
                    ) }}
                {% endif %}
            {% endfor %}
            </tbody>
        </table>
    </div>
{% endblock %}
