<?php

namespace Runalyze\Calculation\Trimp;

use Runalyze\Athlete;
use Runalyze\Profile\Athlete\Gender;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2014-10-11 at 08:23:34.
 */
class InverseCalculatorTest extends \PHPUnit_Framework_TestCase {

	/**
	 * @see http://fellrnr.com/wiki/TRIMP#Worked_Example
	 */
	public function testReferenceExample() {

		// Fellrnr's example is with HRrest (max = 200, rest = 40, avg = 130)
		// Since we're using HRmax, we have to adapt the data
		$Trimp = new InverseCalculator(new Athlete(
			Gender::MALE,
			160,
			0
		), 90, 32 );

		$this->assertEquals( 30*60, $Trimp->value(), '', 0.01*30*60 );
	}

	public function testViaTrimp() {
		$Athlete = new Athlete(null, 205, 45);

		for ($i = 0; $i < 10; ++$i) {
			$hr = mt_rand(45, 205);
			$t = mt_rand(60, 3600);

			$Trimp = new Calculator($Athlete, array($hr => $t));

			if ($Trimp->value() > 0) {
				$Inverse = new InverseCalculator($Athlete, $hr, $Trimp->value() );
				$this->assertEquals( $t, $Inverse->value(), sprintf('Inverse check failed for %us at %ubpm.', $t, $hr), 0.01*$t );
			}
		}
	}

}
