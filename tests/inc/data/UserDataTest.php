<?php

require_once dirname(__FILE__) . '/../../../inc/data/class.UserData.php';

/**
 * Test class for UserData.
 * Generated by PHPUnit on 2012-03-02 at 20:30:06.
 */
class UserDataTest extends PHPUnit_Framework_TestCase {

	/**
	 * @var UserData
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {
		$this->object = new UserData(array(
			'id' => 1,
			'time' => mktime(0,0,0, 6, 24, 2000),
			'weight' => 70,
			'pulse_rest' => 50,
			'pulse_max' => 190,
			'fat' => 10.5,
			'water' => 65.2,
			'muscles' => 43.2
		));
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() {
		
	}

	/**
	 * @covers UserData::getTimestamp
	 */
	public function testGetTimestamp() {
		$this->assertEquals( $this->object->getTimestamp(), mktime(0,0,0, 6, 24, 2000) );
	}

	/**
	 * @covers UserData::getDate
	 */
	public function testGetDate() {
		$this->assertEquals( $this->object->getDate(), '24.06.2000' );
	}

	/**
	 * @covers UserData::getWeight
	 */
	public function testGetWeight() {
		$this->assertEquals( $this->object->getWeight(), 70 );
	}

	/**
	 * @covers UserData::getPulseRest
	 */
	public function testGetPulseRest() {
		$this->assertEquals( $this->object->getPulseRest(), 50 );
	}

	/**
	 * @covers UserData::getPulseMax
	 */
	public function testGetPulseMax() {
		$this->assertEquals( $this->object->getPulseMax(), 190 );
	}

	/**
	 * @covers UserData::getBodyFat
	 */
	public function testGetBodyFat() {
		$this->assertEquals( $this->object->getBodyFat(), 10.5 );
	}

	/**
	 * @covers UserData::getWater
	 */
	public function testGetWater() {
		$this->assertEquals( $this->object->getWater(), 65.2 );
	}

	/**
	 * @covers UserData::getMuscles
	 * @todo Implement testGetMuscles().
	 */
	public function testGetMuscles() {
		$this->assertEquals( $this->object->getMuscles(), 43.2 );
	}

	/**
	 * @covers UserData::getLastRow
	 * @todo Implement testGetLastRow().
	 */
	public function testGetLastRow() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers UserData::getFullArray
	 * @todo Implement testGetFullArray().
	 */
	public function testGetFullArray() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers UserData::getDefaultArray
	 * @todo Implement testGetDefaultArray().
	 */
	public function testGetDefaultArray() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers UserData::getCurrentWeight
	 * @todo Implement testGetCurrentWeight().
	 */
	public function testGetCurrentWeight() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers UserData::getCurrentRestPulse
	 * @todo Implement testGetCurrentRestPulse().
	 */
	public function testGetCurrentRestPulse() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers UserData::getCurrentMaxPulse
	 * @todo Implement testGetCurrentMaxPulse().
	 */
	public function testGetCurrentMaxPulse() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

}

?>
