<?php
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2014-01-28 at 14:48:18.
 */
class ElevationCorrectorTest extends PHPUnit_Framework_TestCase {
	/**
	 * @var ElevationCorrector
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() {}

	/**
	 * @covers ElevationCorrector::correctElevation
	 * @covers ElevationCorrector::getCorrectedElevation
	 */
	public function testNoData() {
		$this->setExpectedException('InvalidArgumentException');

		$Corrector = new ElevationCorrector();
		$Corrector->correctElevation(array(), array());
	}

	public function testInvalidData() {
		$this->setExpectedException('InvalidArgumentException');

		$Corrector = new ElevationCorrector();
		$Corrector->correctElevation(array(1,2,3), array(1,2));
	}

	public function testValidData() {
		$Corrector = new ElevationCorrector();
		$Corrector->correctElevation(array(90), array(0));

		$this->assertNotEquals( 'ElevationCorrectorGeoTIFF', $Corrector->getNameOfUsedStrategy() );
	}

	public function testRealData() {
		$Corrector = new ElevationCorrector();
		$Corrector->correctElevation(array(49.445), array(7.769));
		$result = $Corrector->getCorrectedElevation();

		$this->assertEquals( 1, count($result) );
		$this->assertTrue( $result[0] > 230, 'Elevation value ('.$result[0].') is not larger than 230.');
		$this->assertTrue( $result[0] < 245, 'Elevation value ('.$result[0].') is not smaller than 245.');

		if (file_exists(FRONTEND_PATH.'data/gps/srtm/srtm_38_03.tif')) {
			// Assuming that srtm_38_03.tif is present
			$this->assertEquals( 'ElevationCorrectorGeoTIFF', $Corrector->getNameOfUsedStrategy() );
		}
	}

	public function testRealPath() {
		$Corrector = new ElevationCorrector();
		$Corrector->correctElevation(
			array(49.440, 49.441, 49.442, 49.443, 49.444, 49.445, 49.446, 49.447, 49.448, 49.449, 49.450), 
			array(7.760, 7.761, 7.762, 7.763, 7.764, 7.765, 7.766, 7.767, 7.768, 7.769, 7.770)
		);
		$result = $Corrector->getCorrectedElevation();

		$this->assertEquals( 11, count($result) );
		$this->assertTrue( min($result) > 200, 'Minimal elevation value ('.min($result).') is not larger than 200.');
		$this->assertTrue( max($result) < 300, 'Maximal elevation value ('.max($result).') is not smaller than 300.');
	}
}
