<?php

require_once dirname(__FILE__) . '/../../../inc/import/class.ParserSLF.php';

/**
 * Test class for ParserSLF.
 * Generated by PHPUnit on 2012-11-06 at 18:53:09.
 */
class ParserSLFTest extends PHPUnit_Framework_TestCase {

	/**
	 * @var ParserSLF
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() {}

	/**
	 * Test: incorrect xml-file 
	 */
	public function test_empty() {
		$Parser = new ParserSLF('');
		$Parser->parseTraining();

		$this->assertFalse( $Parser->worked() );
		$this->assertNotEmpty( $Parser->getErrors() );
	}

	/**
	 * Test: incorrect xml-file 
	 */
	public function test_notSigma() {
		$XML = '<any><xml><file></file></xml></any>';

		$Parser = new ParserSLF($XML);
		$Parser->parseTraining();

		$this->assertFalse( $Parser->worked() );
		$this->assertNotEmpty( $Parser->getErrors() );
	}

	/**
	 * Test: standard file
	 * Filename: "Standard.slf" 
	 */
	public function test_generalFile() {
		$XML    = file_get_contents(FRONTEND_PATH.'../tests/testfiles/slf/Standard.slf');
		$Parser = new ParserSLF($XML);
		$Parser->parseTraining();

		$this->assertTrue( $Parser->worked() );
		$this->assertTrue( Validator::isClose($Parser->get('s'), 1257) );
		$this->assertTrue( Validator::isClose($Parser->get('distance'), 5.282) );
		$this->assertTrue( Validator::isClose($Parser->get('kcal'), 306) );
		$this->assertTrue( Validator::isClose($Parser->get('pulse_avg'), 163) );
		$this->assertTrue( Validator::isClose($Parser->get('pulse_max'), 174) );
	}

	/**
	 * Test: standard file
	 * Filename: "2012_10_14__13_19_.slf" 
	 */
	public function test_secondFile() {
		$XML    = file_get_contents(FRONTEND_PATH.'../tests/testfiles/slf/2012_10_14__13_19_.slf');
		$Parser = new ParserSLF($XML);
		$Parser->parseTraining();

		$this->assertTrue( $Parser->worked() );
		$this->assertTrue( Validator::isClose($Parser->get('s'), 1803) );
		$this->assertTrue( Validator::isClose($Parser->get('distance'), 4.109) );
		$this->assertTrue( Validator::isClose($Parser->get('kcal'), 243) );
		$this->assertTrue( Validator::isClose($Parser->get('pulse_avg'), 120) );
		$this->assertTrue( Validator::isClose($Parser->get('pulse_max'), 135) );
	}

}

?>