<?php

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-04-10 at 17:21:17.
 */
class ImporterFiletypeSLFTest extends PHPUnit_Framework_TestCase {

	/**
	 * @var ImporterFiletypeSLF
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {
		$this->object = new ImporterFiletypeSLF;
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() { }

	/**
	 * Test: empty string
	 */
	public function testEmptyString() {
		$this->object->parseString('');

		$this->assertTrue( $this->object->failed() );
		$this->assertEmpty( $this->object->objects() );
		$this->assertNotEmpty( $this->object->getErrors() );
	}

	/**
	 * Test: incorrect xml-file 
	 */
	public function test_notPWX() {
		$this->object->parseString('<any><xml><file></file></xml></any>');

		$this->assertTrue( $this->object->failed() );
		$this->assertEmpty( $this->object->objects() );
		$this->assertNotEmpty( $this->object->getErrors() );
	}

	/**
	 * Test: standard file
	 * Filename: "without-dist.pwx" 
	 */
	public function test_withoutDist() {
		$this->object->parseFile('../tests/testfiles/slf/Standard.slf');

		$this->assertFalse( $this->object->hasMultipleTrainings() );
		$this->assertFalse( $this->object->failed() );

		$this->assertEquals( 1257, $this->object->object()->getTimeInSeconds(), '', 30);
		$this->assertEquals( 5.282, $this->object->object()->getDistance(), '', 0.1);
		$this->assertEquals( 306, $this->object->object()->getCalories(), '', 10);
		$this->assertEquals( 163, $this->object->object()->getPulseAvg(), '', 2);
		$this->assertEquals( 174, $this->object->object()->getPulseMax(), '', 2);
	}

	/**
	 * Test: standard file
	 * Filename: "2012_10_14__13_19_.slf" 
	 */
	public function test_secondFile() {
		$this->object->parseFile('../tests/testfiles/slf/2012_10_14__13_19_.slf');

		$this->assertFalse( $this->object->hasMultipleTrainings() );
		$this->assertFalse( $this->object->failed() );

		$this->assertEquals( 1803, $this->object->object()->getTimeInSeconds(), '', 30);
		$this->assertEquals( 4.109, $this->object->object()->getDistance(), '', 0.1);
		$this->assertEquals( 243, $this->object->object()->getCalories(), '', 10);
		$this->assertEquals( 120, $this->object->object()->getPulseAvg(), '', 2);
		$this->assertEquals( 135, $this->object->object()->getPulseMax(), '', 2);
	}

}
