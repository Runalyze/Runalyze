<?php

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-04-10 at 17:21:17.
 */
class ImporterFiletypePWXTest extends PHPUnit_Framework_TestCase {

	/**
	 * @var ImporterFiletypePWX
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {
		$this->object = new ImporterFiletypePWX;
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() { }

	/**
	 * Test: empty string
	 */
	public function testEmptyString() {
		$this->object->parseString('');

		$this->assertTrue( $this->object->failed() );
		$this->assertEmpty( $this->object->objects() );
		$this->assertNotEmpty( $this->object->getErrors() );
	}

	/**
	 * Test: incorrect xml-file 
	 */
	public function test_notPWX() {
		$this->object->parseString('<any><xml><file></file></xml></any>');

		$this->assertTrue( $this->object->failed() );
		$this->assertEmpty( $this->object->objects() );
		$this->assertNotEmpty( $this->object->getErrors() );
	}

	/**
	 * Test: standard file
	 * Filename: "without-dist.pwx" 
	 */
	public function test_withoutDist() {
		$this->object->parseFile('../tests/testfiles/pwx/without-dist.pwx');

		$this->assertFalse( $this->object->hasMultipleTrainings() );
		$this->assertFalse( $this->object->failed() );

		$this->assertEquals( 1646, $this->object->object()->getTimeInSeconds(), '', 30);
		$this->assertEquals( 4.891, $this->object->object()->getDistance(), '', 0.1);

		$this->assertEquals('10.02.2009', date('d.m.Y', $this->object->object()->getTimestamp()) );
		$this->assertEquals('06:15', date('H:i', $this->object->object()->getTimestamp()) );
		$this->assertEquals('Stuart', $this->object->object()->getComment());
		$this->assertEquals("Apple, iPhone (SERIAL_NUMBER)", $this->object->object()->getCreatorDetails());
	}

	/**
	 * Test: standard file
	 * Filename: "with-dist.pwx" 
	 */
	public function test_withDist() {
		$this->object->parseFile('../tests/testfiles/pwx/with-dist.pwx');

		$this->assertFalse( $this->object->hasMultipleTrainings() );
		$this->assertFalse( $this->object->failed() );

		$this->assertEquals( 6978, $this->object->object()->getTimeInSeconds(), '', 30);
		$this->assertEquals( 16.049, $this->object->object()->getDistance(), '', 0.1);

		$this->assertEquals('16.11.2008', date('d.m.Y', $this->object->object()->getTimestamp()) );
		$this->assertEquals('11:40', date('H:i', $this->object->object()->getTimestamp()) );
		$this->assertEquals('Blue Sky trail with Dan and Ian', $this->object->object()->getComment());
		$this->assertEquals("Garmin, Edge 205/305 (EDGE305 Software Version 3.20)", $this->object->object()->getCreatorDetails());
	}

	/**
	 * Test: standard file
	 * Filename: "with-dist-and-hr.pwx" 
	 */
	public function test_withDistAndHr() {
		$this->object->parseFile('../tests/testfiles/pwx/with-dist-and-hr.pwx');

		$this->assertFalse( $this->object->hasMultipleTrainings() );
		$this->assertFalse( $this->object->failed() );

		$this->assertEquals( 13539, $this->object->object()->getTimeInSeconds(), '', 30);
		$this->assertEquals( 89.535, $this->object->object()->getDistance(), '', 0.1);
		$this->assertEquals( 146, $this->object->object()->getPulseAvg(), '', 2);
		$this->assertEquals( 174, $this->object->object()->getPulseMax(), '', 2);
	}

}
