<?php

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-10-27 at 19:46:33.
 */
class HelperTest extends PHPUnit_Framework_TestCase {

	/**
	 * @var Helper
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() {}

	/**
	 * @covers Helper::arrayTrim
	 */
	public function testArrayTrim() {
		$this->assertEquals( array('a', 'b', 'c', 'd', 1), Helper::arrayTrim(array(' a', 'b ', ' c ', 'd', 1)) );
	}

	/**
	 * @covers Helper::roundFor
	 */
	public function testRoundFor() {
		$this->assertEquals( 5, Helper::roundFor(4, 5) );
		$this->assertEquals( 0, Helper::roundFor(9, 20) );
		$this->assertEquals( 20, Helper::roundFor(11, 20) );
		$this->assertEquals( 20, Helper::roundFor(20, 20) );
		$this->assertEquals( 20, Helper::roundFor(21, 20) );
		$this->assertEquals( 20, Helper::roundFor(29, 20) );
	}

	/**
	 * @covers Helper::floorFor
	 */
	public function testFloorFor() {
		$this->assertEquals( 0, Helper::floorFor(4, 5) );
		$this->assertEquals( 0, Helper::floorFor(9, 20) );
		$this->assertEquals( 0, Helper::floorFor(11, 20) );
		$this->assertEquals( 20, Helper::floorFor(20, 20) );
		$this->assertEquals( 20, Helper::floorFor(21, 20) );
		$this->assertEquals( 20, Helper::floorFor(29, 20) );
	}

	/**
	 * @covers Helper::ceilFor
	 */
	public function testCeilFor() {
		$this->assertEquals( 5, Helper::ceilFor(4, 5) );
		$this->assertEquals( 20, Helper::ceilFor(9, 20) );
		$this->assertEquals( 20, Helper::ceilFor(11, 20) );
		$this->assertEquals( 20, Helper::ceilFor(20, 20) );
		$this->assertEquals( 40, Helper::ceilFor(21, 20) );
		$this->assertEquals( 40, Helper::ceilFor(29, 20) );
	}

	/**
	 * @covers Helper::TwoNumbers
	 */
	public function testTwoNumbers() {
		$this->assertEquals( '00', Helper::TwoNumbers(0) );
		$this->assertEquals( '05', Helper::TwoNumbers(5) );
		$this->assertEquals( '09', Helper::TwoNumbers(9) );
		$this->assertEquals( '10', Helper::TwoNumbers(10) );
		$this->assertEquals( '17', Helper::TwoNumbers(17) );
	}

	/**
	 * @covers Helper::Unknown
	 */
	public function testUnknown() {
		$this->assertEquals( '?', Helper::Unknown(null) );
		$this->assertEquals( '-', Helper::Unknown(0, '-') );
		$this->assertEquals( 1, Helper::Unknown(1, '-') );
		$this->assertEquals( 'test', Helper::Unknown('test', '-') );
	}

	/**
	 * @covers Helper::Cut
	 * @todo   Implement testCut().
	 */
	public function testCut() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers Helper::CommaToPoint
	 */
	public function testCommaToPoint() {
		$this->assertEquals( '17.5', Helper::CommaToPoint('17.5') );
		$this->assertEquals( '17.5', Helper::CommaToPoint('17,5') );
		$this->assertEquals( '175', Helper::CommaToPoint('175') );
	}

	/**
	 * @covers Helper::getStartTime
	 * @todo   Implement testGetStartTime().
	 */
	public function testGetStartTime() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers Helper::recalculateStartTime
	 * @todo   Implement testRecalculateStartTime().
	 */
	public function testRecalculateStartTime() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers Helper::recalculateHFmaxAndHFrest
	 * @todo   Implement testRecalculateHFmaxAndHFrest().
	 */
	public function testRecalculateHFmaxAndHFrest() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers Helper::getHFmax
	 * @todo   Implement testGetHFmax().
	 */
	public function testGetHFmax() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers Helper::recalculateHFmax
	 * @todo   Implement testRecalculateHFmax().
	 */
	public function testRecalculateHFmax() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers Helper::getHFrest
	 * @todo   Implement testGetHFrest().
	 */
	public function testGetHFrest() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers Helper::recalculateHFrest
	 * @todo   Implement testRecalculateHFrest().
	 */
	public function testRecalculateHFrest() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

}
