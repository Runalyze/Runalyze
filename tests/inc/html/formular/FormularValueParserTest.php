<?php

use Runalyze\Configuration;
use Runalyze\Parameter\Application\DistanceUnitSystem;
use Runalyze\Parameter\Application\TemperatureUnit;

/**
 * Test class for FormularValueParser.
 * Generated by PHPUnit on 2012-03-05 at 12:45:41.
 */
class FormularValueParserTest extends PHPUnit_Framework_TestCase {

	/**
	 * @var FormularValueParser
	 */
	protected $object;

	protected function setUp() {
		$this->object = new FormularValueParser;
		$_POST = array();
	}

	protected function tearDown() {
		$_POST = array();
	}

	public function testValidatePost_PARSER_DATE() {
		$Parser = FormularValueParser::$PARSER_DATE;
		$_POST  = array(
			'empty'	=> '',
			'text'	=> 'test',
			'int'	=> '27',
			'd.m'	=> '1.1.',
			'd.m.Y'	=> '13.4.10',
			'date'	=> '13.4.2010'
		);

		$this->assertTrue( true !== $this->object->validatePost('empty', $Parser) );
		$this->assertTrue( true !== $this->object->validatePost('text', $Parser) );
		$this->assertTrue( true !== $this->object->validatePost('int', $Parser) );
		$this->assertTrue( $this->object->validatePost('d.m', $Parser) );
		$this->assertTrue( $this->object->validatePost('d.m.Y', $Parser) );
		$this->assertTrue( $this->object->validatePost('date', $Parser) );

		$this->assertEquals( $_POST['d.m'], mktime(0, 0, 0, 1, 1, date('Y')) );
		$this->assertEquals( $_POST['d.m.Y'], mktime(0, 0, 0, 4, 13, 2010) );
		$this->assertEquals( $_POST['date'], mktime(0, 0, 0, 4, 13, 2010) );
	}

	public function testParse() {
		$date = time();
		$this->object->parse($date, FormularValueParser::$PARSER_DATE);
		$this->assertEquals($date, date('d.m.Y'));
	}
}
